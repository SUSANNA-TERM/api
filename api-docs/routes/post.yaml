### METER ROUTES ###
/api/Meters:
  post:
    tags:
      - Meter
    summary: Writes the given meter in the blockchain
    requestBody:
     required: true
     content:
       application/json:
         schema:
           $ref: '#/components/schemas/Meter'
    responses:
      '200':
        $ref: '#/components/responses/Success'
      '400':
        $ref: '#/components/responses/BadRequest'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '404':
        $ref: '#/components/responses/NotFound'

/api/Meters/collections/{collection}:
  post:
    tags:
      - Meter
    summary: Writes the given meter in a private collection in the blockchain
    parameters:
      - $ref: '#/components/parameters/collection'
    requestBody:
     required: true
     content:
       application/json:
         schema:
           $ref: '#/components/schemas/Meter'
    responses:
      '200':
        $ref: '#/components/responses/Success'
      '400':
        $ref: '#/components/responses/BadRequest'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '404':
        $ref: '#/components/responses/NotFound'
### METER ROUTES ###


### METER_STATUS ROUTES ##
/api/MeterStatuses:
  post:
    tags:
      - MeterStatus
    summary: Writes the given meter status in the blockchain
    requestBody:
     required: true
     content:
       application/json:
         schema:
           $ref: '#/components/schemas/MeterStatus'
    responses:
      '200':
        $ref: '#/components/responses/Success'
      '400':
        $ref: '#/components/responses/BadRequest'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '404':
        $ref: '#/components/responses/NotFound'

/api/MeterStatuses/collections/{collection}:
  post:
    tags:
      - MeterStatus
    summary: Writes the given meter status in a private collection in the blockchain
    parameters:
      - $ref: '#/components/parameters/collection'
    requestBody:
     required: true
     content:
       application/json:
         schema:
           $ref: '#/components/schemas/MeterStatus'
    responses:
      '200':
        $ref: '#/components/responses/Success'
      '400':
        $ref: '#/components/responses/BadRequest'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '404':
        $ref: '#/components/responses/NotFound'
### METER_STATUS ROUTES ###


### READINGS ROUTES ###
/api/Readings/collections/{collection}:
  post:
    tags:
      - Readings
    summary: Gets all the readings for a specific location and time-frame
    parameters:
      - $ref: '#/components/parameters/collection'
    requestBody:
     required: true
     content:
       application/json:
         schema:
           type: object
           properties:
             startDate:
               type: string
               format: date-time
               description: Date and time of the start of the time-frame
             endDate:
               type: string
               format: date-time
               description: Date and time of the end of the time-frame
             locationId:
               type: integer
               format: int32
               description: Id of the location
    responses:
      '200':
        $ref: '#/components/responses/Success'
      '400':
        $ref: '#/components/responses/BadRequest'
      '401':
        $ref: '#/components/responses/Unauthorized'
      '404':
        $ref: '#/components/responses/NotFound'
### READINGS ROUTES ###